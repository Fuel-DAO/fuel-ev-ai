type CollectionMetaData = record {
        weight : float64;
        drive_type : text;
        purchase_price : nat;
        token : principal;
        documents : vec record { text; text };
        supply_cap : nat;
        displays : text;
        seating : text;
        cargo : float64;
        logo : text;
        name : text;
        overall_height : float64;
        description : text;
        overall_width : float64;
        track_front : float64;
        collection_owner : principal;
        asset_canister : principal;
        ground_clearance : float64;
        key_features : vec text;
        range_per_charge : float64;
        track_rear : float64;
        acceleration : text;
        charging_speed : text;
        wheels : float64;
        brochure_url : text;
        index : principal;
        price : nat;
        battery : text;
        overall_length : float64;
        total_supply : nat;
        symbol : text;
        treasury : principal;
        images : vec text
    };
type AcceptSaleResponse = variant {
    Ok : bool;
    Err : text;
};

type RejectSaleResponse = variant {
    Ok : bool;
    Err : text;
};
type SaleStatusResponse = variant { Live; Rejected; Accepted };

service : (variant {
    Upgrade;
    Init : record {
        weight : float64;
        drive_type : text;
        purchase_price : nat;
        token : principal;
        documents : vec record { text; text };
        supply_cap : nat;
        displays : text;
        seating : text;
        cargo : float64;
        logo : text;
        name : text;
        overall_height : float64;
        description : text;
        overall_width : float64;
        track_front : float64;
        collection_owner : principal;
        asset_canister : principal;
        ground_clearance : float64;
        key_features : vec text;
        range_per_charge : float64;
        track_rear : float64;
        acceleration : text;
        charging_speed : text;
        wheels : float64;
        brochure_url : text;
        index : principal;
        price : nat;
        battery : text;
        overall_length : float64;
        symbol : text;
        treasury : principal;
        images : vec text
    }
}) -> {
     accept_sale : () -> (AcceptSaleResponse);
    book_tokens : (record { quantity : nat }) -> (variant { Ok : bool; Err : text });
    change_ownership : (principal) -> (variant { Ok : nat; Err : text });
    get_booked_tokens : (opt principal) -> (nat) query;
    get_escrow_account : () -> (record { accountId : text; account : record { owner : principal; subaccount : vec nat8 } }) query;
    get_metadata : () -> ( CollectionMetaData ) query;
    get_sale_status : () -> (SaleStatusResponse) query;
    get_total_booked_tokens : () -> (nat) query;
    icrc61_supported_standards : () -> (vec record { url : text; name : text }) query;
    icrc7_atomic_batch_transfers : () -> (opt bool) query;
    icrc7_balance_of : (vec record { owner : principal; subaccount : opt vec nat8 }) -> (vec nat) query;
    icrc7_collection_metadata : () -> (vec record {
        text;
        variant {
            Int : int;
            Map : vec record {
                text;
                variant { Int : int; Nat : nat; Blob : vec nat8; Text : text }
            };
            Nat : nat;
            Blob : vec nat8;
            Text : text;
            Array : vec variant { Int : int; Nat : nat; Blob : vec nat8; Text : text }
        }
    }) query;
    icrc7_description : () -> (opt text) query;
    icrc7_logo : () -> (opt text) query;
    icrc7_max_default_take_value : () -> (opt nat) query;
    icrc7_max_memo_size : () -> (opt nat) query;
    icrc7_max_query_batch_size : () -> (opt nat) query;
    icrc7_max_take_value : () -> (opt nat) query;
    icrc7_max_update_batch_size : () -> (opt nat) query;
    icrc7_name : () -> (text) query;
    icrc7_owner_of : (vec nat) -> (vec opt record { owner : principal; subaccount : opt vec nat8 }) query;
    icrc7_permitted_drift : () -> (opt nat) query;
    icrc7_supply_cap : () -> (opt nat) query;
    icrc7_symbol : () -> (text) query;
    icrc7_token_metadata : (vec nat) -> (vec opt vec record {
        text;
        variant {
            Int : int;
            Map : vec record {
                text;
                variant { Int : int; Nat : nat; Blob : vec nat8; Text : text }
            };
            Nat : nat;
            Blob : vec nat8;
            Text : text;
            Array : vec variant { Int : int; Nat : nat; Blob : vec nat8; Text : text }
        }
    }) query;
    icrc7_tokens : (opt nat, opt nat) -> (vec nat) query;
    icrc7_tokens_of : (record { owner : principal; subaccount : opt vec nat8 }, opt nat, opt nat) -> (vec nat) query;
    icrc7_total_supply : () -> (nat) query;
    icrc7_transfer : (vec record {
        to : record { owner : principal; subaccount : opt vec nat8 };
        token_id : nat;
        memo : opt vec nat8;
        from_subaccount : opt vec nat8;
        created_at_time : opt nat64
    }) -> (vec opt variant {
        Ok : nat;
        Err : variant {
            GenericError : record { message : text; error_code : nat };
            Duplicate : record { duplicate_of : nat };
            NonExistingTokenId;
            Unauthorized;
            CreatedInFuture : record { ledger_time : nat64 };
            InvalidRecipient;
            GenericBatchError : record { message : text; error_code : nat };
            TooOld
        }
    });
    icrc7_tx_window : () -> (opt nat) query;
        reject_sale : () -> (RejectSaleResponse);

    reject_sale_individual : (principal) -> (variant { Ok : bool; Err : text });
    update_metadata : (record {
        weight : opt float64;
        drive_type : opt text;
        purchase_price : opt nat;
        token : opt principal;
        documents : opt vec record { text; text };
        supply_cap : opt nat;
        displays : opt text;
        seating : opt text;
        cargo : opt float64;
        logo : opt text;
        name : opt text;
        overall_height : opt float64;
        description : opt text;
        overall_width : opt float64;
        track_front : opt float64;
        asset_canister : opt principal;
        ground_clearance : opt float64;
        key_features : opt vec text;
        range_per_charge : opt float64;
        track_rear : opt float64;
        acceleration : opt text;
        charging_speed : opt text;
        wheels : opt float64;
        brochure_url : opt text;
        index : opt principal;
        price : opt nat;
        battery : opt text;
        overall_length : opt float64;
        symbol : opt text;
        treasury : opt principal;
        images : opt vec text
    }) -> (variant { Ok : nat; Err : text });
}
