type Document = record {
    title: text;
    url: text;
};

type AddCollectionRequestArg = record {
    weight : float64;
    drive_type : text;
    purchase_price : nat;
    token : principal;
    documents : vec Document; // Now uses the named Document type
    supply_cap : nat;
    displays : text;
    seating : text;
    cargo : float64;
    logo : text;
    name : text;
    overall_height : float64;
    description : text;
    overall_width : float64;
    track_front : float64;
    ground_clearance : float64;
    key_features : vec text;
    range_per_charge : float64;
    track_rear : float64;
    acceleration : text;
    charging_speed : text;
    wheels : float64;
    brochure_url : text;
    index : principal;
    price : nat;
    battery : text;
    overall_length : float64;
    symbol : text;
    treasury : principal;
    images : vec text;
};
type Metadata = record {
    weight : float64;
    drive_type : text;
    purchase_price : nat;
    token : principal;
    documents : vec record { text; text };
    supply_cap : nat;
    displays : text;
    seating : text;
    cargo : float64;
    logo : text;
    name : text;
    overall_height : float64;
    description : text;
    overall_width : float64;
    track_front : float64;
    ground_clearance : float64;
    key_features : vec text;
    range_per_charge : float64;
    track_rear : float64;
    acceleration : text;
    charging_speed : text;
    wheels : float64;
    brochure_url : text;
    index : principal;
    price : nat;
    battery : text;
    overall_length : float64;
    symbol : text;
    treasury : principal;
    images : vec text
};

type ApprovalStatus = variant { Approved; Rejected; Pending };

type RequestInfo = record {
    metadata : opt Metadata;
    token_canister : opt principal;
    approval_status : ApprovalStatus;
    collection_owner : principal;
    asset_canister : opt principal
};
type ApproveRequestResponse = variant {
    Ok : record {
        id : nat;
        token_canister : principal;
        asset_canister : principal
    };
    Err : text
};

type RejectRequestResponse = variant {
    Ok : bool;
    Err : text
};
service : (opt variant { Upgrade; Init }) -> {
    add_admin : (principal) -> (variant { Ok : bool; Err : text });
    add_collection_request : ( AddCollectionRequestArg) -> (variant { Ok : nat; Err : text });

       approve_request : (nat) -> (ApproveRequestResponse);


    delete_collection : (nat) -> (variant { Ok : bool; Err : text });

    get_asset_canister_wasm : () -> (record {
        moduleHash : vec nat8;
        chunkHashes : vec vec nat8
    }) query;

    get_asset_proxy_canister : () -> (principal) query;

    get_pending_requests : () -> (vec nat) query;

        get_request_info : (nat) -> (opt RequestInfo) query;

    get_token_canister_wasm : () -> (record {
        moduleHash : vec nat8;
        chunkHashes : vec vec nat8
    }) query;

    is_admin : (opt principal) -> (bool) query;

    list_collections : () -> (vec record {
        id : nat;
        token_canister : principal;
        asset_canister : principal
    }) query;

    reject_request : (nat) -> (RejectRequestResponse);

    remove_admin : (principal) -> (variant { Ok : bool; Err : text });

    set_asset_canister_wasm : (record {
        moduleHash : vec nat8;
        chunkHashes : vec vec nat8
    }) -> (variant { Ok : bool; Err : text });

    set_asset_proxy_canister : (principal) -> (variant { Ok : bool; Err : text });

    set_token_canister_wasm : (record {
        moduleHash : vec nat8;
        chunkHashes : vec vec nat8
    }) -> (variant { Ok : bool; Err : text });

    upgrade_token_canister : (principal) -> (variant { Ok : bool; Err : text });

    upgrade_token_canisters : () -> (variant { Ok : bool; Err : text });
}
